@startuml


[*] --> DEVICE_OFF

'State declaration
state DEVICE_OFF
state SCANNING
state CHANNEL_LIST
state CLIENT_REGISTRATION
state CLIENT_AUTH_REQUEST
state PAIRING_MODE
state AUTHORIZATION_INIT
state AUTHORIZATION_PENDING
state SUCCESSFUL_PAIRING
state ERROR


'State definition

SCANNING: + onEnter: getChannelList

CHANNEL_LIST: +onEnter: displayChannelList

CLIENT_REGISTRATION: + onEnter: registerClient (name, sw_id, sw_version)
CLIENT_REGISTRATION:  POST /register
CLIENT_REGISTRATION:  {
CLIENT_REGISTRATION:  \t client_name: :name,
CLIENT_REGISTRATION:  \t software_id: :sw_id,
CLIENT_REGISTRATION:  \t software_version: :sw_version
CLIENT_REGISTRATION:  }

PAIRING_MODE: displayModeSelection

CLIENT_AUTH_REQUEST: + onEnter: requestClientAccessToken(client_id, client_secret)
CLIENT_AUTH_REQUEST: POST /token
CLIENT_AUTH_REQUEST: client_id=:client_id&client_secret=:client_secret&grant_type=authorization_code

AUTHORIZATION_INIT: + onEnter: requestUserCode(client_id)
AUTHORIZATION_INIT: POST /token
AUTHORIZATION_INIT: client_id=:client_id&response_type=device_code

AUTHORIZATION_PENDING: + onEnter: displayUserCode
AUTHORIZATION_PENDING:

AUTHORIZATION_CHECK: + onValidatePairingClick: requestAccessToken(client_id, device_code)
AUTHORIZATION_CHECK: POST /token
AUTHORIZATION_CHECK: {
AUTHORIZATION_CHECK: \t client_id:client_id
AUTHORIZATION_CHECK: \t grant_type:'authorization_code'
AUTHORIZATION_CHECK: \t code: device_code
AUTHORIZATION_CHECK: }


'Transitions

DEVICE_OFF -[#blue]-> DEVICE_ON: switch_on
DEVICE_ON -[#green]-> SCANNING

SCANNING -[#green]-> CHANNEL_LIST: onLoaded
SCANNING -[#gray]right-> ERROR: No channel

CHANNEL_LIST -[#blue]-> CLIENT_REGISTRATION: onChannelClick [!isRegistered]
CHANNEL_LIST -[#blue]-> AUTHORIZATION_INIT: onChannelClick [isRegistered && !hasToken && pairingMode]
CHANNEL_LIST -[#blue]-> CLIENT_AUTH_REQUEST: onChannelClick [isRegistered && !hasToken && standAloneMode]
CHANNEL_LIST -[#blue]-> SUCCESSFUL_PAIRING: onChannelClick [isRegistered && hasToken]


CLIENT_REGISTRATION --> PAIRING_MODE: onReply [201]
CLIENT_REGISTRATION -[#gray]-> ERROR: onReply [*]

PAIRING_MODE -[#blue]-> AUTHORIZATION_INIT: onPairedModeClick
PAIRING_MODE -[#blue]-> CLIENT_AUTH_REQUEST: onStandAloneModeClick

CLIENT_AUTH_REQUEST --> SUCCESSFUL_PAIRING: onReply [200, {token, token_type=bearer}]
CLIENT_AUTH_REQUEST -[#gray]-> ERROR: onReply [*]

AUTHORIZATION_INIT --> AUTHORIZATION_PENDING: onReply [200]
AUTHORIZATION_INIT -[#gray]-> ERROR: onReply [*]


AUTHORIZATION_PENDING -[#blue]-> AUTHORIZATION_CHECK: onValidatePairingClick

AUTHORIZATION_CHECK --> SUCCESSFUL_PAIRING: onReply [200, {token, token_type=bearer}]
AUTHORIZATION_CHECK --> AUTHORIZATION_PENDING: onReply [400, '{error:authorization_pending}']
AUTHORIZATION_CHECK -[#gray]-> ERROR: onReply [*]

SUCCESSFUL_PAIRING --> [*]


'Legend

legend left

CPA Client

Note:
- Transitions (format: "trigger [guard] /effect")
.     - Blue:  triggered by a user action (ie click)
.     - Red:   triggered by a reply of a HTTP request.
.     - Gray:  transition to the ERROR State.
.     - Green: others

- Guards are for information only and don't represent an exhaustive description of the specification.
endlegend



' note right of STATE: "transition: trigger[guard]/effect"

@enduml
